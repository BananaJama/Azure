{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "6134939586280316539"
    }
  },
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "allowedValues": [
        "Standard_B2ms",
        "Standard_DS3_v2"
      ],
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "allowedValues": [
        "2016-Datacenter",
        "2019-Datacenter",
        "2019-Datacenter-Core"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Tags object to apply to VMs"
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Local admin password"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    }
  },
  "variables": {
    "subnetName": "SBNT-General",
    "nicName": "[format('{0}-PrimaryNIC', parameters('vmName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'SharedResources'), 'Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', 'VNet-ChrimenyCore', variables('subnetName')), '/')[0], split(format('{0}/{1}', 'VNet-ChrimenyCore', variables('subnetName')), '/')[1])]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Backup{0}', parameters('vmName'))]",
      "resourceGroup": "SharedResources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "vmRG": {
            "value": "[resourceGroup().name]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "13177326886893460498"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string"
            },
            "vmRG": {
              "type": "string"
            },
            "vaultName": {
              "type": "string",
              "defaultValue": "ChrimenyBackups"
            }
          },
          "variables": {
            "backupFabric": "Azure",
            "backupPolicyName": "AzureDailyBackup",
            "protectionContainer": "[format('iaasvmcontainer;iaasvmcontainerv2;{0};{1}', parameters('vmRG'), parameters('vmName'))]",
            "protectedItem": "[format('vm;iaasvmcontainerv2;{0};{1}', parameters('vmRG'), parameters('vmName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}/{2}/{3}', parameters('vaultName'), variables('backupFabric'), variables('protectionContainer'), variables('protectedItem'))]",
              "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "policyId": "[format('{0}/backupPolicies/{1}', resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName')), variables('backupPolicyName'))]",
                "sourceResourceId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vmRG')), 'Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "privateIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))).ipConfigurations[0].properties.privateIPAddress]"
    }
  }
}